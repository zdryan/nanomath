cmake_minimum_required(VERSION 3.25)
project(nanomath LANGUAGES C CXX)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_CXX_STANDARD 23)

include(FetchContent)
FetchContent_Declare(argparse GIT_REPOSITORY https://github.com/p-ranav/argparse.git)
FetchContent_MakeAvailable(argparse)
FetchContent_Declare(date GIT_REPOSITORY https://github.com/HowardHinnant/date.git GIT_TAG v3.0.1)
set(CMAKE_POLICY_DEFAULT_CMP0077 NEW)
option(USE_SYSTEM_TZ_DB "Use OS timezone database" ON)
set(BUILD_TZ_LIB ON)
FetchContent_MakeAvailable(date)

add_executable(nanomath src/nanomath.cpp)
target_compile_options(nanomath PRIVATE -Wall -Wpedantic -Wextra -O3)
if (USE_SYSTEM_TZ_DB)
    target_compile_definitions(nanomath_test PUBLIC AUTO_DOWNLOAD=0 HAS_REMOTE_API=0)
endif()
target_compile_features(nanomath PUBLIC cxx_std_23)
target_link_libraries(nanomath PRIVATE argparse date-tz)

install(TARGETS nanomath)

if (BUILD_TESTS)
    FetchContent_Declare(googletest URL https://github.com/google/googletest/archive/refs/tags/v1.13.0.zip)
    FetchContent_MakeAvailable(googletest)
    enable_testing()
    add_executable(nanomath_test test/nanomath.cpp)
    target_link_libraries(nanomath_test GTest::gtest_main GTest::gmock date-tz)
    target_include_directories(nanomath_test PRIVATE src)
    target_compile_features(nanomath_test PRIVATE cxx_std_23)
    target_compile_definitions(nanomath_test PUBLIC AUTO_DOWNLOAD=1 HAS_REMOTE_API=1)
    include(GoogleTest)
    gtest_discover_tests(nanomath_test)
endif()
